/*
 * Information about a function
 * Copyright (C) 2014  Matija Skala <mskala@gmx.com>
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef FUNCID
#define FUNCID

#include "tupleid"

struct func_info {
    tuple_info args;
    tuple_info return_type;
};

template <typename _ReturnType, typename... _Args>
func_info __funcid(_ReturnType(*__func)(_Args...)) { return {tupleid(std::tuple<_Args...>),typeid2(_ReturnType)}; }

template <typename _ReturnType, typename _Class, typename... _Args>
func_info __funcid(_ReturnType(_Class::*__func)(_Args...)) { return {tupleid(std::tuple<_Args...>),typeid2(_ReturnType)}; }

#define funcid(FUNC) __funcid(&FUNC)
#define func_name(FUNC) (#FUNC + ( "(" + funcid(FUNC).args.name() + ")" ) )
#define method_name(CLASS,METHOD) (#METHOD + ( "(" + funcid(CLASS::METHOD).args.name() + ")" ) )

#endif // FUNCID
